{"version":3,"file":"static/js/450.a8129f68.chunk.js","mappings":"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","sources":["components/RegisterForm/StepOne.js","components/RegisterForm/StepTwo.js","components/RegisterForm/RegisterForm.js","pages/RegisterPage.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport {\n  StyledInput,\n  ErrorText,\n  FormButton,\n  StyledIconButton,\n} from 'components/RegisterForm/Forms.styled';\nimport { Box } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport { useState } from 'react';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .min(8)\n    .max(63)\n    .matches(\n      /^[^-n]+[a-zA-Z0-9.,!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9]+)*$/,\n      'Email must not contain the \"-\" as a first or last character'\n    )\n    .email()\n    .required(),\n  password: yup\n    .string()\n    .min(7)\n    .max(32)\n    .matches(\n      /^[a-zA-Z0-9]*$/,\n      'Password must contain only latin letters and/or numbers'\n    )\n    .required(),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\n    .min(7)\n    .max(32)\n    .required(),\n});\n\nconst StepOne = ({ next, data }) => {\n  const { t } = useTranslation('common');\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfPassword, setShowConfPassword] = useState(false);\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleClickShowConfPassword = () => setShowConfPassword(show => !show);\n  const handleMouseDownConfPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleSubmit = values => {\n    next(values);\n  };\n\n  return (\n    <Formik\n      initialValues={data}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <Box sx={{ position: 'relative' }}>\n          <StyledInput\n            type=\"email\"\n            name=\"email\"\n            placeholder={t('Registration.form.1linePlaceholder')}\n            disableunderline=\"true\"\n          />\n          <ErrorMessage component=\"div\" name=\"email\">\n            {msg => <ErrorText>*{msg}</ErrorText>}\n          </ErrorMessage>\n        </Box>\n        <Box sx={{ position: 'relative' }}>\n          <StyledInput\n            type={showPassword ? 'text' : 'password'}\n            name=\"password\"\n            placeholder={t('Registration.form.2linePlaceholder')}\n            disableunderline=\"true\"\n          />\n          <StyledIconButton\n            aria-label=\"toggle password visibility\"\n            onClick={handleClickShowPassword}\n            onMouseDown={handleMouseDownPassword}\n            edge=\"end\"\n          >\n            {showPassword ? <VisibilityOff /> : <Visibility />}\n          </StyledIconButton>\n          <ErrorMessage component=\"div\" name=\"password\">\n            {msg => <ErrorText>*{msg}</ErrorText>}\n          </ErrorMessage>\n        </Box>\n        <Box sx={{ position: 'relative' }}>\n          <StyledInput\n            type={showConfPassword ? 'text' : 'password'}\n            name=\"confirmPassword\"\n            placeholder={t('Registration.form.3linePassPlaceholder')}\n            disableunderline=\"true\"\n          />\n          <StyledIconButton\n            aria-label=\"toggle confirmPassword visibility\"\n            onClick={handleClickShowConfPassword}\n            onMouseDown={handleMouseDownConfPassword}\n            edge=\"end\"\n          >\n            {showConfPassword ? <VisibilityOff /> : <Visibility />}\n          </StyledIconButton>\n          <ErrorMessage component=\"div\" name=\"confirmPassword\">\n            {msg => <ErrorText>*{msg}</ErrorText>}\n          </ErrorMessage>\n        </Box>\n        <FormButton variant=\"contained\" type=\"submit\">\n          {t('Registration.form.btn')}\n        </FormButton>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default StepOne;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { getAuth } from 'redux/auth/authSelectors';\nimport { LoaderWhite } from 'components';\nimport {\n  StyledInput,\n  ErrorText,\n  FormButton,\n} from 'components/RegisterForm/Forms.styled';\nimport { Box } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  city: yup\n    .string()\n    .matches(/^[A-Za-z,\\s\\u0400-\\u04FF]*$/, 'String must contain only letters')\n    .required(),\n  phone: yup\n    .string()\n    .min(13)\n    .max(13, 'Phone must be at most 13 characters, in format \"+380000000000\"')\n    .matches(/^[+][3][8][0]+[0-9]*$/, 'Phone must be in format \"+380000000000\"')\n    .required(),\n});\n\nconst StepTwo = ({ next, prev, data }) => {\n  const { t } = useTranslation('common');\n  const handleSubmit = (values, { resetForm }) => {\n    next(values, true);\n    resetForm();\n  };\n  const { isLoading } = useSelector(getAuth);\n\n  return (\n    <Formik\n      initialValues={data}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      {({ values }) => {\n        return (\n          <Form>\n            <Box sx={{ position: 'relative' }}>\n              <StyledInput\n                type=\"text\"\n                name=\"name\"\n                placeholder={t('Registration.form.4linePlaceholder')}\n                disableunderline=\"true\"\n              />\n              <ErrorMessage component=\"div\" name=\"name\">\n                {msg => <ErrorText>*{msg}</ErrorText>}\n              </ErrorMessage>\n            </Box>\n            <Box sx={{ position: 'relative' }}>\n              <StyledInput\n                type=\"text\"\n                name=\"city\"\n                placeholder={t('Registration.form.5linePlaceholder')}\n                disableunderline=\"true\"\n              />\n              <ErrorMessage component=\"div\" name=\"city\">\n                {msg => <ErrorText>*{msg}</ErrorText>}\n              </ErrorMessage>\n            </Box>\n            <Box sx={{ position: 'relative' }}>\n              <StyledInput\n                type=\"tel\"\n                name=\"phone\"\n                placeholder={t('Registration.form.6linePlaceholder')}\n                disableunderline=\"true\"\n              />\n              <ErrorMessage component=\"div\" name=\"phone\">\n                {msg => <ErrorText>*{msg}</ErrorText>}\n              </ErrorMessage>\n            </Box>\n            <FormButton variant=\"contained\" type=\"submit\">\n              {!isLoading ? t('Registration.form.finalBtn') : <LoaderWhite />}\n            </FormButton>\n            <FormButton\n              variant=\"outlined\"\n              type=\"button\"\n              onClick={() => prev(values)}\n            >\n              {t('Registration.form.backBtn')}\n            </FormButton>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default StepTwo;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { registerUser } from 'redux/auth/authOperations';\nimport StepOne from './StepOne';\nimport StepTwo from './StepTwo';\n\nconst RegisterForm = () => {\n  const [data, setData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    name: '',\n    city: '',\n    phone: '',\n  });\n  const [currentStep, setCurrentStep] = useState(0);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleNextStep = (newData, final = false) => {\n    setData(prev => ({ ...prev, ...newData }));\n\n    if (final) {\n      dispatch(\n        registerUser({\n          email: newData.email,\n          password: newData.password,\n          name: newData.name,\n          city: newData.city,\n          phone: newData.phone,\n        })\n      );\n\n      navigate('/verification');\n\n      return;\n    }\n\n    setCurrentStep(prev => prev + 1);\n  };\n\n  const handlePrevStep = newData => {\n    setData(prev => ({ ...prev, ...newData }));\n    setCurrentStep(prev => prev - 1);\n  };\n\n  const steps = [\n    <StepOne next={handleNextStep} data={data} />,\n    <StepTwo next={handleNextStep} prev={handlePrevStep} data={data} />,\n  ];\n\n  return <>{steps[currentStep]}</>;\n};\n\nexport default RegisterForm;\n","import React from 'react';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\nimport { Link } from 'react-router-dom';\nimport {\n  AuthContainer,\n  ContentWrapper,\n  HeaderText,\n  Switcher,\n} from 'pages/LoginPage/LoginPage.styled';\nimport { useTranslation } from 'react-i18next';\n\nfunction RegisterPage() {\n  const {t} = useTranslation('common')\n  return (\n    <AuthContainer>\n      <ContentWrapper>\n        <HeaderText> {t('Registration.title')} </HeaderText>\n        <RegisterForm />\n        <Switcher>\n          {t('Registration.footer.msg')} <Link to=\"/login\">{ t('Registration.footer.link')}</Link>\n        </Switcher>\n      </ContentWrapper>\n    </AuthContainer>\n  );\n}\n\nexport default RegisterPage;\n"],"names":["schema","yup","shape","email","min","max","matches","required","password","confirmPassword","oneOf","_ref","next","data","t","useTranslation","showPassword","setShowPassword","useState","showConfPassword","setShowConfPassword","_jsx","Formik","initialValues","validationSchema","onSubmit","values","children","_jsxs","Form","Box","sx","position","StyledInput","type","name","placeholder","disableunderline","ErrorMessage","component","msg","ErrorText","StyledIconButton","onClick","handleClickShowPassword","show","onMouseDown","event","preventDefault","edge","VisibilityOff","Visibility","handleClickShowConfPassword","FormButton","variant","city","phone","prev","isLoading","useSelector","getAuth","handleSubmit","_ref2","resetForm","_ref3","LoaderWhite","RegisterForm","setData","currentStep","setCurrentStep","dispatch","useDispatch","navigate","useNavigate","handleNextStep","newData","final","arguments","length","undefined","registerUser","steps","StepOne","StepTwo","_Fragment","AuthContainer","ContentWrapper","HeaderText","Switcher","Link","to"],"sourceRoot":""}