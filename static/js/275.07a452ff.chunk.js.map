{"version":3,"file":"static/js/275.07a452ff.chunk.js","mappings":"kRAAaA,EAAU,SAAAC,GAAK,OAAIA,EAAMC,IAAI,E,uCCoB3B,SAASC,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KACtB,GAAmCC,EAAAA,EAAAA,IAAYP,GAAvCE,EAAI,EAAJA,KAAMM,EAAK,EAALA,MAAOC,EAAS,EAATA,UACrB,GAAwCC,EAAAA,EAAAA,MAAiB,eAAlDC,EAAY,KAAEC,EAAe,KAC9BC,EAAQF,EAAaG,IAAI,UACzBC,GAAWC,EAAAA,EAAAA,MACTC,GAAMC,EAAAA,EAAAA,IAAe,UAArBD,GAERE,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVN,GAA0B,OAAVA,EAGlB,OAFAO,SAASC,eAAe,cAAcC,aACtCP,GAASQ,EAAAA,EAAAA,MAGXR,GAASS,EAAAA,EAAAA,GAAgBnB,GAC3B,GAAG,CAACU,EAAUF,EAAOR,IAEnB,IA0BIoB,GAAaC,EAAAA,EAAAA,GAAcxB,EAAM,QAEvC,OACE,SAAC,KAAI,WACH,UAAC,KAAa,YACZ,SAACyB,EAAA,EAAU,CAACC,QAAQ,KAAKC,GAAI,CAAEC,UAAW,UAAW,SAAEb,EAAE,qBACzD,SAAC,KAAU,CAACc,SAzBG,SAACC,GACQ,MAAb,OAAXA,QAAW,IAAXA,OAAW,EAAXA,EAAaC,QAKbD,EAAYC,OAAOC,OAAS,GAAKF,EAAYG,SAAS,KACxDC,EAAAA,GAAAA,MAAY,yDAIVJ,IAAgB3B,EAKpBC,EAAS0B,GAJPI,EAAAA,GAAAA,MAAY,0BAAD,OAA2B/B,EAAK,sCAV3C+B,EAAAA,GAAAA,MAAY,8BAehB,EAQ0CC,QAhCd,SAACC,GACzBA,EAAMC,iBACNjC,EAAS,IACTM,EAAgB,IAChBQ,SAASC,eAAe,cAAcC,OACxC,IA4BKd,IAAS,uBAAIA,EAAMgC,OACnB/B,IAAa,SAAC,KAAU,IACR,IAAhBP,EAAKgC,QACF,SAAC,KAAQ,CAAChC,KAAMuB,KAChB,SAAC,KAAU,CAACpB,MAAOQ,QAK/B,C","sources":["redux/news/newsSelectors.js","pages/NewsPage.js"],"sourcesContent":["export const getNews = state => state.news\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\n\nimport {\n  LoaderPage,\n  NewsSearch,\n  NewsList,\n  NoNewsItem,\n} from 'components';\nimport { Main, NewsContainer } from 'components/News/NewsItem/newsItem.styled';\n\nimport { fetchNews, fetchSearchNews } from 'redux/news/newsOperations';\nimport { getNews } from 'redux/news/newsSelectors';\nimport { sortObjByDate } from 'services/sortObjByDate';\nimport { useTranslation } from 'react-i18next';\nimport { Typography } from '@mui/material';\n\n\nexport default function NewsPage() {\n  const [value, setValue] = useState('');\n  const { news, error, isLoading } = useSelector(getNews);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('search')\n  const dispatch = useDispatch();\n  const { t } = useTranslation('common');\n\n  useEffect(() => {\n    if (query === '' || query === null) {\n      document.getElementById(\"searchForm\").reset();\n      dispatch(fetchNews());\n      return\n    }\n    dispatch(fetchSearchNews(value));\n  }, [dispatch, query, value]);\n\n    const handleClearSearch = (event) => {\n      event.preventDefault();\n      setValue('');\n      setSearchParams('');\n      document.getElementById(\"searchForm\").reset();\n    };\n  \n  const onFormSubmit = (searchValue) => {\n    if (searchValue?.trim() === \"\") {\n      toast.error(\"Please, enter search value!\")\n      return\n    }\n\n    if (searchValue.trim().length < 3 || searchValue.includes('*')) {\n      toast.error(\"Please, enter no less 3 letters for a correct search!\")\n      return\n    }\n\n    if (searchValue === value) {\n      toast.error(`We have already found \"${value}\"! Please, enter new search value`)\n      return\n    }\n\n    setValue(searchValue)\n  }\n\n  const sortedNews = sortObjByDate(news, 'date');\n\n  return (\n    <Main>\n      <NewsContainer>\n        <Typography variant=\"h2\" sx={{ textAlign: 'center' }}>{t('NewsPage.title')}</Typography>\n        <NewsSearch onSubmit={onFormSubmit} onClear={ handleClearSearch} />\n        {error && <p>{error.data}</p>}\n        {isLoading && <LoaderPage />}\n        {news.length !== 0\n          ? <NewsList news={sortedNews} />\n          : <NoNewsItem value={query} />}\n\n      </NewsContainer>\n    </Main>\n  );\n}\n"],"names":["getNews","state","news","NewsPage","useState","value","setValue","useSelector","error","isLoading","useSearchParams","searchParams","setSearchParams","query","get","dispatch","useDispatch","t","useTranslation","useEffect","document","getElementById","reset","fetchNews","fetchSearchNews","sortedNews","sortObjByDate","Typography","variant","sx","textAlign","onSubmit","searchValue","trim","length","includes","toast","onClear","event","preventDefault","data"],"sourceRoot":""}