{"version":3,"file":"static/js/640.46de132f.chunk.js","mappings":"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","sources":["components/RegisterForm/Forms.styled.js","pages/LoginPage/LoginPage.styled.js","components/RegisterForm/StepOne.js","components/RegisterForm/StepTwo.js","components/RegisterForm/RegisterForm.js","pages/RegisterPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  background-color: #fdf7f2;\n  width: 100%;\n  height: 40px;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  padding: 0 32px;\n  margin-bottom: 16px;\n\n  &::placeholder {\n    font-family: 'Manrope';\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.36;\n    letter-spacing: 0.04em;\n    color: rgba(17, 17, 17, 0.6);\n  }\n\n  &:last-child {\n    margin-bottom: 40px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 52px;\n\n    &::placeholder {\n      font-size: 18px;\n      line-height: 25px;\n    }\n  }\n`;\n\nexport const ErrorText = styled.div`\n  padding: 5px 20px;\n  margin-bottom: 10px;\n  color: #f59256;\n`;\n\nexport const Button = styled.button`\n  background-color: ${props => (props.color ? '#f59256' : '#fff')};\n  color: ${props => (props.color ? '#fff' : '#000')};\n  border: 2px solid #f59256;\n  border-radius: 40px;\n  width: 100%;\n  height: 44px;\n  margin-top: 16px;\n\n  @media screen and (min-width: 1280px) {\n    height: 48px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport mobile from '../../assets/backgrounds/mobile.png';\nimport tablet from '../../assets/backgrounds/tablet.png';\nimport desktop from '../../assets/backgrounds/desktop.png';\n\nexport const Background = styled.div`\n  width: 100%;\n  height: 100vh;\n  padding-top: 100px;\n  background-color: #fdf7f2;\n  background-image: url(${mobile});\n  background-size: 100% 160px;\n  background-repeat: no-repeat;\n  background-position: bottom;\n  background-size: contain;\n  background-attachment: fixed;\n  overflow: auto;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 240px;\n    background-size: 100% 400px;\n    background-image: url(${tablet});\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 150px;\n    background-size: 100% 390px;\n    background-image: url(${desktop});\n  }\n`;\n\nexport const ContentWrapper = styled.div`\n  width: 280px;\n  padding: 40px 0 40px 0;\n  margin-right: auto;\n  margin-left: auto;\n\n  @media screen and (min-width: 768px) {\n    width: 608px;\n    min-height: 300px;\n    padding: 60px 80px 40px 80px;\n    background-color: #fff;\n    border-radius: 40px;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 618px;\n    padding: 60px 80px 60px 80px;\n  }\n`;\n\nexport const Switcher = styled.p`\n  margin-top: 40px;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.3;\n  text-align: center;\n`;\n","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { Input, ErrorText, Button } from 'components/RegisterForm/Forms.styled';\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .min(10)\n    .max(63)\n    .matches(\n      /^[^-n]+[a-zA-Z0-9.,!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9]+)*$/,\n      'Email must not contain the \"-\" as a first or last character'\n    )\n    .email()\n    .required(),\n  password: yup\n    .string()\n    .min(7)\n    .max(32)\n    .matches(\n      /^[a-zA-Z0-9]*$/,\n      'Password must contain only letters and/or numbers'\n    )\n    .required(),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\n    .min(7)\n    .max(32)\n    .required(),\n});\n\nconst StepOne = ({ next, data }) => {\n  const handleSubmit = values => {\n    next(values);\n  };\n\n  return (\n    <Formik\n      initialValues={data}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <Field type=\"email\" name=\"email\" placeholder=\"Email\" as={Input} />\n        <ErrorMessage component=\"div\" name=\"email\">\n          {msg => <ErrorText>{msg}</ErrorText>}\n        </ErrorMessage>\n        <Field\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          as={Input}\n        />\n        <ErrorMessage component=\"div\" name=\"password\">\n          {msg => <ErrorText>{msg}</ErrorText>}\n        </ErrorMessage>\n        <Field\n          type=\"password\"\n          name=\"confirmPassword\"\n          placeholder=\"Confirm Password\"\n          as={Input}\n        />\n        <ErrorMessage component=\"div\" name=\"confirmPassword\">\n          {msg => <ErrorText>{msg}</ErrorText>}\n        </ErrorMessage>\n        <Button color=\"accent\" type=\"submit\">\n          Next\n        </Button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default StepOne;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { getAuth } from 'redux/auth/authSelectors';\nimport { Loader } from 'components';\nimport { Input, ErrorText, Button } from 'components/RegisterForm/Forms.styled';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  city: yup\n    .string()\n    .matches(\n      /^[A-Z][a-z]+,\\s+[A-Z][a-z]*$/,\n      'Begin with capital letters, contain comma and space'\n    )\n    .required(),\n  phone: yup\n    .string()\n    .min(13)\n    .max(13)\n    .matches(\n      /^[+][3][8][0]+[0-9]*$/,\n      'Phone must contain only numbers and start with \"+380\"'\n    )\n    .required(),\n});\n\nconst StepTwo = ({ next, prev, data }) => {\n  const handleSubmit = (values, { resetForm }) => {\n    next(values, true);\n    resetForm();\n  };\n  const { isLoading } = useSelector(getAuth);\n\n  return (\n    <Formik\n      initialValues={data}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      {({ values }) => {\n        return (\n          <Form>\n            <Field type=\"text\" name=\"name\" placeholder=\"Name\" as={Input} />\n            <ErrorMessage component=\"div\" name=\"name\">\n              {msg => <ErrorText>{msg}</ErrorText>}\n            </ErrorMessage>\n            <Field\n              type=\"text\"\n              name=\"city\"\n              placeholder=\"City, Region\"\n              as={Input}\n            />\n            <ErrorMessage component=\"div\" name=\"city\">\n              {msg => <ErrorText>{msg}</ErrorText>}\n            </ErrorMessage>\n            <Field\n              type=\"tel\"\n              name=\"phone\"\n              placeholder=\"Mobile phone\"\n              as={Input}\n            />\n            <ErrorMessage component=\"div\" name=\"phone\">\n              {msg => <ErrorText>{msg}</ErrorText>}\n            </ErrorMessage>\n            <Button color=\"accent\" type=\"submit\">\n              {!isLoading ? 'Register' : <Loader />}\n            </Button>\n            <Button type=\"button\" onClick={() => prev(values)}>\n              Back\n            </Button>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default StepTwo;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { registerUser } from 'redux/auth/authOperations';\nimport StepOne from './StepOne';\nimport StepTwo from './StepTwo';\n\nconst RegisterForm = () => {\n  const [data, setData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    name: '',\n    city: '',\n    phone: '',\n  });\n  const [currentStep, setCurrentStep] = useState(0);\n  const dispatch = useDispatch();\n\n  const handleNextStep = (newData, final = false) => {\n    setData(prev => ({ ...prev, ...newData }));\n\n    if (final) {\n      const response = dispatch(\n        registerUser({\n          email: newData.email,\n          password: newData.password,\n          name: newData.name,\n          city: newData.city,\n          phone: newData.phone,\n        })\n      );\n\n      if (response.success) {\n        return <Navigate to=\"/login\" replace />;\n      }\n\n      return;\n    }\n\n    setCurrentStep(prev => prev + 1);\n  };\n\n  const handlePrevStep = newData => {\n    setData(prev => ({ ...prev, ...newData }));\n    setCurrentStep(prev => prev - 1);\n  };\n\n  const steps = [\n    <StepOne next={handleNextStep} data={data} />,\n    <StepTwo next={handleNextStep} prev={handlePrevStep} data={data} />,\n  ];\n\n  return <>{steps[currentStep]}</>;\n};\n\nexport default RegisterForm;\n","import React from 'react';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\nimport { Typography } from '@mui/material';\nimport {\n  Background,\n  ContentWrapper,\n  Switcher,\n} from 'pages/LoginPage/LoginPage.styled';\nimport { Link } from 'react-router-dom';\n\nfunction RegisterPage() {\n  return (\n    <Background>\n      <ContentWrapper>\n        <Typography sx={{ textAlign: 'center', mb: '40px' }} variant=\"h3\">\n          Register\n        </Typography>\n        <RegisterForm />\n        <Switcher>\n          Already have an account? <Link to=\"/login\">Login</Link>\n        </Switcher>\n      </ContentWrapper>\n    </Background>\n  );\n}\n\nexport default RegisterPage;\n"],"names":["Input","styled","ErrorText","Button","props","color","Background","mobile","tablet","desktop","ContentWrapper","Switcher","schema","yup","shape","email","min","max","matches","required","password","confirmPassword","oneOf","next","data","initialValues","validationSchema","onSubmit","values","type","name","placeholder","as","component","msg","city","phone","prev","isLoading","useSelector","getAuth","resetForm","onClick","useState","setData","currentStep","setCurrentStep","dispatch","useDispatch","handleNextStep","newData","final","response","registerUser","success","to","replace","steps","Typography","sx","textAlign","mb","variant"],"sourceRoot":""}