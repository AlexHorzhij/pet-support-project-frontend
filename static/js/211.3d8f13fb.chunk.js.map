{"version":3,"file":"static/js/211.3d8f13fb.chunk.js","mappings":"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","sources":["components/RegisterForm/Forms.styled.js","components/RegisterForm/StepOne.js","components/RegisterForm/StepTwo.js","components/RegisterForm/RegisterForm.js","pages/RegisterPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n  /* margin-right: auto;\n  margin-left: auto; */\n`;\n\nexport const Input = styled.input`\n  background-color: #fdf7f2;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  padding: 14px 32px;\n  margin-bottom: 16px;\n  width: calc(100% - 66px);\n  height: 40px;\n\n  &::placeholder {\n    font-family: 'Manrope';\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 19px;\n    letter-spacing: 0.04em;\n    color: rgba(17, 17, 17, 0.6);\n  }\n\n  &:last-child {\n    margin-bottom: 40px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 52px;\n\n    &::placeholder {\n      font-size: 18px;\n      line-height: 25px;\n    }\n  }\n`;\n\nexport const ErrorText = styled.div`\n  padding: 5px 20px;\n  margin-bottom: 10px;\n  color: #f59256;\n`;\n\nexport const Button = styled.button`\n  background-color: ${props => (props.color ? '#f59256' : '#fff')};\n  color: ${props => (props.color ? '#fff' : '#000')};\n  border: 2px solid #f59256;\n  border-radius: 40px;\n  width: 100%;\n  height: 44px;\n\n  @media screen and (min-width: 1280px) {\n    height: 48px;\n  }\n`;\n","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport {\n  FormWrapper,\n  Input,\n  ErrorText,\n  Button,\n} from 'components/RegisterForm/Forms.styled';\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .min(10)\n    .max(63)\n    .matches(\n      /^[^-n]+[a-zA-Z0-9.,!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9]+)*$/,\n      'Email must not contain the \"-\" as a first or last character'\n    )\n    .email()\n    .required(),\n  password: yup\n    .string()\n    .min(7)\n    .max(32)\n    .matches(\n      /^[a-zA-Z0-9]*$/,\n      'Password must contain only letters and/or numbers'\n    )\n    .required(),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\n    .min(7)\n    .max(32)\n    .required(),\n});\n\nconst StepOne = ({ next, data }) => {\n  const handleSubmit = values => {\n    next(values);\n  };\n\n  return (\n    <Formik\n      initialValues={data}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <FormWrapper>\n          <Field type=\"email\" name=\"email\" placeholder=\"Email\" as={Input} />\n          <ErrorMessage component=\"div\" name=\"email\">\n            {msg => <ErrorText>{msg}</ErrorText>}\n          </ErrorMessage>\n          <Field\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            as={Input}\n          />\n          <ErrorMessage component=\"div\" name=\"password\">\n            {msg => <ErrorText>{msg}</ErrorText>}\n          </ErrorMessage>\n          <Field\n            type=\"password\"\n            name=\"confirmPassword\"\n            placeholder=\"Confirm Password\"\n            as={Input}\n          />\n          <ErrorMessage component=\"div\" name=\"confirmPassword\">\n            {msg => <ErrorText>{msg}</ErrorText>}\n          </ErrorMessage>\n          <Button color=\"accent\" type=\"submit\">\n            Next\n          </Button>\n        </FormWrapper>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default StepOne;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { getAuth } from 'redux/auth/authSelectors';\nimport { Loader } from 'components';\nimport {\n  FormWrapper,\n  Input,\n  ErrorText,\n  Button,\n} from 'components/RegisterForm/Forms.styled';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  city: yup\n    .string()\n    .matches(\n      /^[A-Z][a-z]+,\\s+[A-Z][a-z]*$/,\n      'Begin with capital letters, contain comma and space'\n    )\n    .required(),\n  phone: yup\n    .string()\n    .min(13)\n    .max(13)\n    .matches(\n      /^[+][3][8][0]+[0-9]*$/,\n      'Phone must contain only numbers and start with \"+380\"'\n    )\n    .required(),\n});\n\nconst StepTwo = ({ next, prev, data }) => {\n  const handleSubmit = (values, { resetForm }) => {\n    next(values, true);\n    resetForm();\n  };\n  const { isLoading } = useSelector(getAuth);\n\n  return (\n    <Formik\n      initialValues={data}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      {({ values }) => {\n        return (\n          <Form>\n            <FormWrapper>\n              <Field type=\"text\" name=\"name\" placeholder=\"Name\" as={Input} />\n              <ErrorMessage component=\"div\" name=\"name\">\n                {msg => <ErrorText>{msg}</ErrorText>}\n              </ErrorMessage>\n              <Field\n                type=\"text\"\n                name=\"city\"\n                placeholder=\"City, Region\"\n                as={Input}\n              />\n              <ErrorMessage component=\"div\" name=\"city\">\n                {msg => <ErrorText>{msg}</ErrorText>}\n              </ErrorMessage>\n              <Field\n                type=\"tel\"\n                name=\"phone\"\n                placeholder=\"Mobile phone\"\n                as={Input}\n              />\n              <ErrorMessage component=\"div\" name=\"phone\">\n                {msg => <ErrorText>{msg}</ErrorText>}\n              </ErrorMessage>\n              <Button color=\"accent\" type=\"submit\">\n                {!isLoading ? 'Register' : <Loader />}\n              </Button>\n              <Button type=\"button\" onClick={() => prev(values)}>\n                Back\n              </Button>\n            </FormWrapper>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default StepTwo;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { registerUser } from 'redux/auth/authOperations';\nimport StepOne from './StepOne';\nimport StepTwo from './StepTwo';\n\nconst RegisterForm = () => {\n  const [data, setData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    name: '',\n    city: '',\n    phone: '',\n  });\n  const [currentStep, setCurrentStep] = useState(0);\n  const dispatch = useDispatch();\n\n  const handleNextStep = (newData, final = false) => {\n    setData(prev => ({ ...prev, ...newData }));\n\n    if (final) {\n      const response = dispatch(\n        registerUser({\n          email: newData.email,\n          password: newData.password,\n          name: newData.name,\n          city: newData.city,\n          phone: newData.phone,\n        })\n      );\n\n      if (response.success) {\n        return <Navigate to=\"/user\" replace />;\n      }\n\n      return;\n    }\n\n    setCurrentStep(prev => prev + 1);\n  };\n\n  const handlePrevStep = newData => {\n    setData(prev => ({ ...prev, ...newData }));\n    setCurrentStep(prev => prev - 1);\n  };\n\n  const steps = [\n    <StepOne next={handleNextStep} data={data} />,\n    <StepTwo next={handleNextStep} prev={handlePrevStep} data={data} />,\n  ];\n\n  return <>{steps[currentStep]}</>;\n};\n\nexport default RegisterForm;\n","import React from 'react';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\nimport { Link } from 'react-router-dom';\n\nfunction RegisterPage() {\n  return (\n    <div>\n      <h2>Register</h2>\n      <RegisterForm />\n      <p>\n        Already have an account? <Link to=\"/login\">Login</Link>\n      </p>\n    </div>\n  );\n}\n\nexport default RegisterPage;\n"],"names":["FormWrapper","styled","Input","ErrorText","Button","props","color","schema","yup","shape","email","min","max","matches","required","password","confirmPassword","oneOf","next","data","initialValues","validationSchema","onSubmit","values","type","name","placeholder","as","component","msg","city","phone","prev","isLoading","useSelector","getAuth","resetForm","onClick","useState","setData","currentStep","setCurrentStep","dispatch","useDispatch","handleNextStep","newData","final","response","registerUser","success","to","replace","steps"],"sourceRoot":""}