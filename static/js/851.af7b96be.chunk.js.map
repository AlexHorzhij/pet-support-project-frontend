{"version":3,"file":"static/js/851.af7b96be.chunk.js","mappings":"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","sources":["components/UserPage/UserDataItem/UserDataItem.js","components/UserPage/Logout/Logput.styled.js","components/UserPage/Logout/Logout.js","components/UserPage/UserData/UserData.styled.js","redux/userData/userDataSelectors.js","components/UserPage/UserData/UserData.js","components/UserPage/PetItem/PetItem.js","components/UserPage/PetsList/PetsList.js","components/UserPage/PetsData/PetsData.js","components/Modal/Modal.styled.js","components/Modal/Modal.js","components/UserPage/FormStepper/FormStepper.js","components/UserPage/ModalAddsPet/ModalAddsPet.styled.js","assets/images/myPets/addImage.svg","components/UserPage/ModalAddsPet/ModalAddsPet.js","pages/UserPage.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { Box, IconButton, Typography } from '@mui/material';\nimport ModeEditOutlineRoundedIcon from '@mui/icons-material/ModeEditOutlineRounded';\nimport DoneRoundedIcon from '@mui/icons-material/DoneRounded';\nimport { useDispatch } from 'react-redux';\nimport { updateUser } from 'redux/userData/userDataOperations';\nfunction UserDataItem({ title = '', value = '', disabled = true }) {\n  const dispatch = useDispatch();\n\n  const [inputState, setInputState] = useState(disabled);\n  const [inputValue, setInputValue] = useState(value);\n  // eslint-disable-next-line no-unused-vars\n  const [inputName, __] = useState(title);\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    const name = inputName.toLowerCase();\n    dispatch(updateUser({ name, value: inputValue }));\n  }, [dispatch, inputName, inputValue, value]);\n\n  const changeInputState = e => {\n    setInputState(prev => !prev);\n    setTimeout(() => {\n      inputRef.current.focus();\n    }, 100);\n  };\n  const changeInputValue = e => {\n    setInputValue(e.currentTarget.value);\n  };\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        width: '100%',\n        mb: '10px',\n        fontSize: '18px',\n\n        ':last-child': {\n          mb: '0',\n        },\n      }}\n    >\n      <Box sx={{ mr: 'auto' }}>\n        <Typography>{title}:</Typography>\n      </Box>\n      <input\n        ref={inputRef}\n        id={title}\n        style={{\n          borderColor: inputState ? 'transparent' : '#F59256',\n          backgroundColor: inputState ? 'transparent' : '#FDF7F2',\n          borderWidth: '1px',\n          padding: '5px 10px',\n          borderStyle: 'solid',\n          borderRadius: '15px',\n          width: '230px',\n          margin: '0 15px',\n          appearance: 'none',\n          outline: 'none',\n        }}\n        disabled={inputState}\n        value={inputValue}\n        onChange={changeInputValue}\n        onBlur={changeInputState}\n      />\n      <IconButton\n        onClick={changeInputState}\n        sx={{ backgroundColor: '#FDF7F2', width: '32px', height: '32px' }}\n      >\n        {inputState ? (\n          <ModeEditOutlineRoundedIcon\n            sx={{ width: '20px', color: '#F59256' }}\n          />\n        ) : (\n          <DoneRoundedIcon sx={{ width: '25px', color: '#F59256' }} />\n        )}\n      </IconButton>\n    </Box>\n  );\n}\n\nexport default UserDataItem;\n","import { styled } from '@mui/material/styles';\nimport { IconButton, Typography } from '@mui/material';\n\nexport const StyledLogoutButton = styled(IconButton)({\n  borderRadius: '5px',\n  height: '26px',\n  alignSelf: 'start',\n  padding: '0',\n  marginTop: '10px',\n});\nexport const StyledButtonTitle = styled(Typography)({\n  fontSize: '12px',\n});\n","import React from 'react';\nimport LogoutRoundedIcon from '@mui/icons-material/LogoutRounded';\nimport { StyledLogoutButton, StyledButtonTitle } from './Logput.styled';\n\nfunction Logout() {\n  return (\n    <>\n      <StyledLogoutButton>\n        <LogoutRoundedIcon sx={{ width: '20px', color: '#F59256' }} />\n        <StyledButtonTitle>Log Out</StyledButtonTitle>\n      </StyledLogoutButton>\n    </>\n  );\n}\n\nexport default Logout;\n","import { styled } from '@mui/material/styles';\nimport { IconButton, Box } from '@mui/material';\n\nexport const BoxWrapper = styled(Box)({\n  boxSizing: 'border-box',\n  backgroundColor: '#ffffff',\n  borderTopRightRadius: '40px',\n  borderBottomRightRadius: '40px',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  padding: '20px 16px',\n  width: '411px',\n  marginLeft: '-24px',\n  boxShadow: '7px 14px 11px 0px rgba(49, 21, 4, 0.07)',\n});\nexport const BoxImageWrapper = styled(Box)({\n  width: '100%',\n  display: 'flex',\n  position: 'relative',\n  justifyContent: 'center',\n  marginBottom: '36px',\n});\nexport const BoxImageBackdrop = styled(Box)({\n  width: '233px',\n  borderRadius: '50%',\n  overflow: 'hidden',\n});\nexport const BoxImageContainer = styled(Box)({\n  width: '100%',\n  paddingTop: '100%',\n  backgroundColor: 'black',\n  position: 'relative',\n});\nexport const StyledButton = styled(IconButton)({\n  borderRadius: '5px',\n  height: '26px',\n  padding: '3px',\n  position: 'absolute',\n  bottom: 0,\n  right: 0,\n});\nexport const ImageBox = styled(Box)({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  objectFit: 'cover',\n});\n","export const getUserData = state => state.userData;\nexport const getUser = state => state.userData.user;\n","import React, { useEffect, useState } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera';\nimport UserDataItem from '../UserDataItem/UserDataItem';\nimport Logout from '../Logout/Logout';\nimport { useDropzone } from 'react-dropzone';\n\nimport {\n  BoxWrapper,\n  BoxImageWrapper,\n  BoxImageBackdrop,\n  BoxImageContainer,\n  StyledButton,\n  ImageBox,\n} from './UserData.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUser } from 'redux/userData/userDataSelectors';\nimport { fetchUserData, updateUser } from 'redux/userData/userDataOperations';\n\nfunction UserData() {\n  const dispatch = useDispatch();\n  const user = useSelector(getUser);\n\n  // eslint-disable-next-line no-unused-vars\n  const [userPicture, setUserPicture] = useState(false);\n  const { getRootProps, getInputProps, acceptedFiles } = useDropzone({});\n\n  useEffect(() => {\n    if (acceptedFiles.length > 0) {\n      const preview = URL.createObjectURL(acceptedFiles[0]);\n      console.log('preview: ', preview);\n      dispatch(updateUser({ name: 'picture', value: preview }));\n    }\n    dispatch(fetchUserData());\n  }, [dispatch, acceptedFiles, userPicture]);\n\n  return (\n    <>\n      <BoxWrapper>\n        <BoxImageWrapper>\n          <BoxImageBackdrop>\n            <BoxImageContainer>\n              <ImageBox\n                component=\"img\"\n                src={\n                  user.picture\n                    ? user.picture\n                    : 'https://images.unsplash.com/photo-1580489944761-15a19d654956?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1361&q=80'\n                }\n                alt=\"user avatar\"\n              />\n            </BoxImageContainer>\n          </BoxImageBackdrop>\n          <div className=\"container\">\n            <div {...getRootProps({ className: 'dropzone' })}>\n              <input {...getInputProps()} />\n              <StyledButton>\n                <PhotoCameraIcon sx={{ color: '#F59256', height: '20px' }} />\n                <Typography sx={{ fontSize: '12px' }}>Edit photo</Typography>\n              </StyledButton>\n            </div>\n          </div>\n        </BoxImageWrapper>\n        <Box sx={{ width: '100%' }}>\n          {user.name && (\n            <>\n              <UserDataItem title={'Name'} value={user.name} />\n              <UserDataItem title={'Email'} value={user.email} />\n              <UserDataItem title={'Birthday'} value={user.birthday} />\n              <UserDataItem title={'Phone'} value={user.phone} />\n              <UserDataItem title={'City'} value={user.city} />\n            </>\n          )}\n        </Box>\n        <Logout />\n      </BoxWrapper>\n    </>\n  );\n}\n\nexport default UserData;\n","import { Box, IconButton, Typography, ListItem } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useDispatch } from 'react-redux';\nimport { deletePetFromList } from 'redux/petsData/petsOperations';\n\nfunction PetItem({ imgSrc, name, birthDate, breed, comment, id }) {\n  const dispatch = useDispatch();\n\n  const handlePetDelete = petId => {\n    dispatch(deletePetFromList(petId));\n  };\n\n  return (\n    <ListItem\n      sx={{\n        boxSizing: 'border-box',\n        display: 'flex',\n        alignItems: 'start',\n        backgroundColor: 'white',\n        borderRadius: '40px',\n        boxShadow: '7px 14px 11px 0px rgba(49, 21, 4, 0.07)',\n        padding: '20px',\n        '&:not(:last-child)': {\n          mb: '22px',\n        },\n      }}\n    >\n      <Box sx={{ minWidth: '161px', height: '161px' }}>\n        <img\n          style={{\n            width: '161px',\n            height: '161px',\n            borderRadius: '40px',\n            objectFit: 'cover',\n          }}\n          src={imgSrc}\n          alt=\"my pet\"\n        />\n      </Box>\n      <Box sx={{ ml: '10px', mr: 'auto' }}>\n        <Box>\n          <Typography>Name: {name}</Typography>\n        </Box>\n        <Box>\n          <Typography>Date of birth: {birthDate}</Typography>\n        </Box>\n        <Box>\n          <Typography>Breed: {breed}</Typography>\n        </Box>\n        <Box>\n          <Typography>Comments: {comment}</Typography>\n        </Box>\n      </Box>\n      <IconButton\n        onClick={() => handlePetDelete(id)}\n        sx={{ backgroundColor: '#FDF7F2' }}\n      >\n        <DeleteIcon />\n      </IconButton>\n    </ListItem>\n  );\n}\n\nexport default PetItem;\n","import React from 'react';\nimport PetItem from '../PetItem/PetItem';\nimport { List } from '@mui/material';\nfunction PetsList({ pets }) {\n  return (\n    <List style={{ listStyle: 'none' }}>\n      {pets &&\n        pets.map(({ id, picture, name, dateOfBirth, breed, comment }) => {\n          return (\n            <PetItem\n              key={id}\n              imgSrc={picture}\n              name={name}\n              birthDate={dateOfBirth}\n              breed={breed}\n              comment={comment}\n              id={id}\n            />\n          );\n        })}\n    </List>\n  );\n}\n\nexport default PetsList;\n","import { useEffect } from 'react';\nimport PetsList from '../PetsList/PetsList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPetsData } from 'redux/petsData/petsOperations';\n\nfunction PetsData() {\n  const dispatch = useDispatch();\n  const pets = useSelector(state => state.petsData.pets);\n\n  useEffect(() => {\n    dispatch(fetchPetsData());\n  }, [dispatch]);\n\n  return (\n    <>\n      <PetsList pets={pets} />\n    </>\n  );\n}\n\nexport default PetsData;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(17, 17, 17, 0.6);\n  z-index: 1200;\n  backdrop-filter: blur(5px);\n`;\nexport const ModalWrapper = styled.div`\n  position: relative;\n  /* max-width: calc(100vw - 750px);\n  max-height: calc(100vh - 100px); */\n  border-radius: 30px;\n  overflow: hidden;\n  z-index: 1300;\n`;\nexport const ModalButton = styled.button`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 30px;\n  height: 30px;\n  background-color: aquamarine;\n  opacity: 0.7;\n\n  border: none;\n  top: 10px;\n  color: black;\n  right: 10px;\n  border-radius: 50%;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  padding: 0;\n  & svg {\n    width: 30px;\n    height: 30px;\n  }\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport { Overlay, ModalWrapper } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ children, onModalClose }) {\n  useEffect(() => {\n    const modalCloseKeyDown = e => {\n      if (e.code === 'Escape') {\n        onModalClose();\n      }\n    };\n    window.addEventListener('keydown', modalCloseKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', modalCloseKeyDown);\n    };\n  }, [onModalClose]);\n\n  const modalCloseBackDrop = e => {\n    if (e.target === e.currentTarget) {\n      onModalClose();\n    }\n  };\n  return createPortal(\n    <Overlay className=\"overlay\" onClick={modalCloseBackDrop}>\n      <ModalWrapper>{children}</ModalWrapper>\n    </Overlay>,\n    modalRoot\n  );\n}\nModal.propTypes = {\n  onModalClose: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import React, { useState } from 'react';\nimport { Form } from 'formik';\nimport { Box, Button } from '@mui/material';\n\nexport const FormStepper = ({ children, onClose }) => {\n  const stepsArray = React.Children.toArray(children);\n  const [step, setStep] = useState(0);\n  const currentStep = stepsArray[step];\n\n  return (\n    <Form className=\"addForm\">\n      {/* <Stepper alternativeLabel activeStep={step} sx={{ marginBottom: 5 }}>\n        {stepsArray.map((child, index) => (\n          <Step key={index} completed={step > index}>\n            <StepLabel key={index}>{child.props.label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper> */}\n      {currentStep}\n      <Box\n        sx={{\n          marginTop: 5,\n          display: 'flex',\n          justifyContent: 'space-evenly',\n        }}\n      >\n        {step === 0 && (\n          <Button\n            onClick={onClose}\n            sx={{ minWidth: '180px' }}\n            type=\"button\"\n            variant=\"outlined\"\n          >\n            Cancel\n          </Button>\n        )}\n\n        <Button\n          sx={{ minWidth: '180px' }}\n          type=\"button\"\n          variant={step === 0 ? 'contained' : 'outlined'}\n          onClick={() => {\n            step === 0 ? setStep(1) : setStep(0);\n          }}\n        >\n          {step === 0 ? 'Next' : 'Back'}\n        </Button>\n\n        {step === 1 && (\n          <Button sx={{ minWidth: '180px' }} variant=\"contained\" type=\"submit\">\n            Done\n          </Button>\n        )}\n      </Box>\n    </Form>\n  );\n};\n","import { styled } from '@mui/material/styles';\nimport { Typography } from '@mui/material';\n\nexport const ModalTyporgaphy = styled(Typography)({\n  fontSize: '24px',\n  fontWeight: '500',\n  lineHeight: '27px',\n  letterSpacing: ' 0px',\n  textAlign: 'left',\n  marginBottom: '12px',\n});\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgAddImage(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 52,\n    height: 50,\n    viewBox: \"0 0 52 50\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26 49V25M26 25V1M26 25H50.375M26 25H1.625\",\n    stroke: \"#111111\",\n    strokeOpacity: 0.6,\n    strokeWidth: 2,\n    strokeLinecap: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAddImage);\nexport default __webpack_public_path__ + \"static/media/addImage.ddd97a7b4a6fe9fdc00d1fdf2ac1bb1c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\nimport { Formik, Field } from 'formik';\nimport { Card, CardContent, Grid, Typography } from '@mui/material';\nimport { FormStepper } from '../FormStepper/FormStepper';\nimport { Box } from '@mui/system';\nimport Dropzone from 'react-dropzone';\nimport { useDispatch } from 'react-redux';\nimport { addPetToList } from 'redux/petsData/petsOperations';\nimport { nanoid } from 'nanoid';\nimport { ModalTyporgaphy } from './ModalAddsPet.styled';\nimport { TextField } from 'formik-material-ui';\nimport addIconSVG from '../../../assets/images/myPets/addImage.svg';\nfunction ModalAddsPet({ onModalClose }) {\n  const dispatch = useDispatch();\n  const [images, setImages] = useState([]);\n  const formSumbitHandler = async (values, onSubmitProps) => {\n    const preview = URL.createObjectURL(values.picture);\n    values.picture = preview;\n    values.id = nanoid();\n    console.log('values: ', values);\n\n    dispatch(addPetToList(values));\n    // const formData = new FormData();\n    // for (let value in values) {\n    //   formData.append(value, values[value]);\n    // }\n    // formData.append('picturePath', values.picture.name);\n    // console.log('formData: ', formData);\n\n    // alert(JSON.stringify(values, null, 2));\n    onSubmitProps.resetForm();\n    onModalClose();\n  };\n\n  return (\n    <Formik enctype=\"multipart/form-data\">\n      <Card sx={{ width: '608px' }}>\n        <CardContent sx={{ paddingY: 5, paddingX: 10 }}>\n          <Typography sx={{ fontSize: '36px', textAlign: 'center' }}>\n            Add pet\n          </Typography>\n          <Formik\n            initialValues={{\n              name: '',\n              dateOfBirth: '',\n              breed: '',\n              comment: '',\n              picture: '',\n              avatarURL: '',\n              owner: '1',\n            }}\n            onSubmit={formSumbitHandler}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              setFieldValue,\n              resetForm,\n            }) => (\n              <FormStepper onClose={onModalClose}>\n                <Box>\n                  <Grid\n                    item\n                    md={6}\n                    sx={{\n                      '&:not(:last-child)': {\n                        mb: '28px',\n                      },\n                    }}\n                  >\n                    <ModalTyporgaphy>Name pet</ModalTyporgaphy>\n\n                    <Field\n                      sx={{\n                        backgroundColor: '#FDF7F2',\n                        borderRadius: '40px',\n\n                        '&>label': {\n                          color: 'rgba(17, 17, 17, 0.6)',\n                        },\n\n                        '&>label+div>input+fieldset': {\n                          borderColor: 'rgba(245, 146, 86, 0.5)',\n                        },\n                      }}\n                      fullWidth\n                      name=\"name\"\n                      component={TextField}\n                      label=\"Type name pet\"\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    md={6}\n                    sx={{\n                      '&:not(:last-child)': {\n                        mb: '28px',\n                      },\n                    }}\n                  >\n                    <ModalTyporgaphy>Date of birth</ModalTyporgaphy>\n\n                    <Field\n                      sx={{\n                        backgroundColor: '#FDF7F2',\n                        borderRadius: '40px',\n                        '&>label': {\n                          color: 'rgba(17, 17, 17, 0.6)',\n                        },\n                        '&>label+div>input+fieldset': {\n                          borderColor: 'rgba(245, 146, 86, 0.5)',\n                        },\n                      }}\n                      fullWidth\n                      name=\"dateOfBirth\"\n                      component={TextField}\n                      label=\"Type date of birth\"\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    md={6}\n                    sx={{\n                      '&:not(:last-child)': {\n                        mb: '28px',\n                      },\n                    }}\n                  >\n                    <ModalTyporgaphy>Breed</ModalTyporgaphy>\n                    <Field\n                      sx={{\n                        backgroundColor: '#FDF7F2',\n                        borderRadius: '26px',\n                        '&>label': {\n                          color: 'rgba(17, 17, 17, 0.6)',\n                        },\n                        '&>label+div>input+fieldset': {\n                          borderColor: 'rgba(245, 146, 86, 0.5)',\n                        },\n                      }}\n                      fullWidth\n                      name=\"breed\"\n                      component={TextField}\n                      label=\"Last Name\"\n                    />\n                  </Grid>\n                </Box>\n                <Grid\n                  sx={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                  }}\n                >\n                  <Typography\n                    sx={{ fontSize: '20px', textAlign: 'center', mb: '20px' }}\n                  >\n                    Add photo and some comments\n                  </Typography>\n                  <Dropzone\n                    acceptedFiles=\".jpg,.jpeg,.png\"\n                    multiple={false}\n                    onDrop={acceptedFiles => {\n                      setFieldValue('picture', acceptedFiles[0]);\n\n                      acceptedFiles.map(file => {\n                        const reader = new FileReader();\n                        reader.onload = function (e) {\n                          setImages([{ src: e.target.result }]);\n                        };\n                        reader.readAsDataURL(file);\n                        return file;\n                      });\n                    }}\n                  >\n                    {({ getRootProps, getInputProps }) => (\n                      <Box\n                        {...getRootProps()}\n                        p=\"1rem\"\n                        sx={{\n                          '&:hover': { cursor: 'pointer' },\n                          boxSizing: 'border-box',\n                          display: 'flex',\n                          justifyContent: 'center',\n                          alignItems: 'center',\n                          width: '182px',\n                          height: '182px',\n                          borderRadius: '40px',\n                          backgroundColor: '#FDF7F2',\n                          m: '0',\n                        }}\n                      >\n                        <input {...getInputProps()} />\n                        {!values.picture ? (\n                          <Box>\n                            <img src={addIconSVG} alt=\"add pet avatar\" />\n\n                            {/* <AddOutlinedIcon\n                              sx={{\n                                fontSize: '83px',\n                              }}\n                            /> */}\n                          </Box>\n                        ) : (\n                          <Box\n                            sx={{\n                              height: '100%',\n                              borderRadius: '40px',\n                              overflow: 'auto',\n                            }}\n                          >\n                            {images.length > 0 && (\n                              <img\n                                style={{ height: '100%', objectFit: 'cover' }}\n                                alt=\"preview\"\n                                src={images[0]?.src}\n                                className=\"file-img\"\n                              />\n                            )}\n                          </Box>\n                        )}\n                      </Box>\n                    )}\n                  </Dropzone>\n                  <Grid item md={6} sx={{ mt: '40px' }}>\n                    <Field\n                      sx={{\n                        backgroundColor: '#FDF7F2',\n                        width: '395px',\n                        borderRadius: '20px',\n\n                        '&>label': {\n                          color: 'rgba(17, 17, 17, 0.6)',\n                        },\n                        '&>label+div>textarea+textarea+fieldset': {\n                          borderColor: 'rgba(245, 146, 86, 0.5)',\n                        },\n                        '&>label+div': {\n                          borderRadius: '20px',\n                        },\n                      }}\n                      multiline={true}\n                      rows={5}\n                      fullWidth\n                      name=\"comment\"\n                      component={TextField}\n                      label=\"Type comment\"\n                    />\n                  </Grid>\n                </Grid>\n              </FormStepper>\n            )}\n          </Formik>\n        </CardContent>\n      </Card>\n    </Formik>\n  );\n}\n\nexport default ModalAddsPet;\n","import React, { useState } from 'react';\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport UserData from 'components/UserPage/UserData/UserData';\nimport PetsData from 'components/UserPage/PetsData/PetsData';\nimport { IconButton } from '@mui/material';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport Modal from 'components/Modal/Modal';\nimport ModalAddsPet from 'components/UserPage/ModalAddsPet/ModalAddsPet';\nfunction UserPage() {\n  const [modalIsShown, setModalIsShown] = useState(false);\n\n  const toogleModal = () => {\n    setModalIsShown(prev => !prev);\n  };\n  return (\n    <Container\n      sx={{\n        flexDirection: 'row',\n        display: 'flex',\n        backgroundColor: '#FDF7F2',\n        gap: '32px',\n        mt: '50px',\n        pt: '30px',\n      }}\n    >\n      <Box>\n        <Typography\n          variant=\"h3\"\n          sx={{ ml: '17px', fontSize: '28px', mb: '24px' }}\n        >\n          My information:\n        </Typography>\n        <UserData />\n      </Box>\n      <Box sx={{ position: 'relative' }}>\n        <Typography\n          variant=\"h3\"\n          sx={{ ml: '17px', fontSize: '28px', mb: '24px' }}\n        >\n          My pets:\n        </Typography>\n        <PetsData />\n        <IconButton\n          sx={{\n            borderRadius: '10px',\n            position: 'absolute',\n            top: '0',\n            right: '0',\n          }}\n          onClick={toogleModal}\n        >\n          <Typography sx={{ fontSize: '20px', color: 'black' }}>\n            Add pet\n          </Typography>\n          <AddCircleIcon\n            sx={{ color: '#F59256', fontSize: '25px', ml: '5px' }}\n          />\n        </IconButton>\n      </Box>\n      {modalIsShown && (\n        <Modal onModalClose={toogleModal}>\n          <ModalAddsPet onModalClose={toogleModal} />\n        </Modal>\n      )}\n    </Container>\n  );\n}\n\nexport default UserPage;\n"],"names":["title","value","disabled","dispatch","useDispatch","useState","inputState","setInputState","inputValue","setInputValue","inputName","inputRef","useRef","useEffect","name","toLowerCase","updateUser","changeInputState","e","prev","setTimeout","current","focus","Box","sx","display","flexDirection","alignItems","width","mb","fontSize","mr","Typography","ref","id","style","borderColor","backgroundColor","borderWidth","padding","borderStyle","borderRadius","margin","appearance","outline","onChange","currentTarget","onBlur","IconButton","onClick","height","ModeEditOutlineRounded","color","DoneRounded","StyledLogoutButton","styled","alignSelf","marginTop","StyledButtonTitle","LogoutRounded","BoxWrapper","boxSizing","borderTopRightRadius","borderBottomRightRadius","justifyContent","marginLeft","boxShadow","BoxImageWrapper","position","marginBottom","BoxImageBackdrop","overflow","BoxImageContainer","paddingTop","StyledButton","bottom","right","ImageBox","top","left","objectFit","getUser","state","userData","user","useSelector","userPicture","useDropzone","getRootProps","getInputProps","acceptedFiles","length","preview","URL","createObjectURL","console","log","fetchUserData","component","src","picture","alt","className","PhotoCamera","email","birthday","phone","city","imgSrc","birthDate","breed","comment","ListItem","minWidth","ml","petId","deletePetFromList","Delete","pets","List","listStyle","map","dateOfBirth","petsData","fetchPetsData","Overlay","ModalWrapper","modalRoot","document","querySelector","Modal","children","onModalClose","modalCloseKeyDown","code","window","addEventListener","removeEventListener","createPortal","target","FormStepper","onClose","stepsArray","React","step","setStep","currentStep","Button","type","variant","ModalTyporgaphy","fontWeight","lineHeight","letterSpacing","textAlign","images","setImages","formSumbitHandler","values","onSubmitProps","nanoid","addPetToList","resetForm","enctype","Card","CardContent","paddingY","paddingX","initialValues","avatarURL","owner","onSubmit","setFieldValue","errors","touched","handleBlur","handleChange","handleSubmit","Grid","item","md","fullWidth","TextField","label","multiple","onDrop","file","reader","FileReader","onload","result","readAsDataURL","p","cursor","m","addIconSVG","mt","multiline","rows","modalIsShown","setModalIsShown","toogleModal","Container","gap","pt","AddCircle"],"sourceRoot":""}