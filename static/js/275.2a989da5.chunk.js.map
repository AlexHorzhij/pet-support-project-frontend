{"version":3,"file":"static/js/275.2a989da5.chunk.js","mappings":"kRAAaA,EAAU,SAAAC,GAAK,OAAIA,EAAMC,IAAI,E,8BCoB3B,SAASC,IAEtB,OAAmCC,EAAAA,EAAAA,IAAYJ,GAAvCE,EAAI,EAAJA,KAAMG,EAAK,EAALA,MAAOC,EAAS,EAATA,UACrB,GAAwCC,EAAAA,EAAAA,MAAiB,eAAlDC,EAAY,KAAEC,EAAe,KAC9BC,EAAQF,EAAaG,IAAI,UACzBC,GAAWC,EAAAA,EAAAA,MACTC,GAAMC,EAAAA,EAAAA,IAAe,UAArBD,GAERE,EAAAA,EAAAA,YAAU,WAKRJ,EAJc,KAAVF,GAA0B,OAAVA,GAIXO,EAAAA,EAAAA,GAAgBP,IAHZQ,EAAAA,EAAAA,KAIf,GAAG,CAACN,EAAUF,IAEd,IAmBMS,GAAaC,EAAAA,EAAAA,GAAclB,EAAM,QAEvC,OACE,SAAC,KAAI,WACH,UAAC,KAAa,YACZ,SAAC,KAAK,CAACmB,KAAOP,EAAE,qBAChB,SAAC,KAAU,CAACQ,SAzBG,SAACC,GACQ,MAAb,OAAXA,QAAW,IAAXA,OAAW,EAAXA,EAAaC,QAKbD,EAAYC,OAAOC,OAAS,GAAIF,EAAYG,SAAS,KACvDC,EAAAA,GAAAA,MAAY,yDAIVJ,IAAgBb,EAKpBD,EAAgC,KAAhBc,EAAqB,CAAEK,OAAQL,GAAgB,CAAC,GAJ9DI,EAAAA,GAAAA,MAAY,0BAAD,OAA2BjB,EAAK,sCAV3CiB,EAAAA,GAAAA,MAAY,8BAehB,EAQ0CE,MAAOnB,IAC1CL,IAAS,uBAAIA,EAAMyB,OACnBxB,IAAa,SAAC,KAAU,IACR,IAAhBJ,EAAKuB,QACF,SAAC,KAAQ,CAACvB,KAAMiB,KAChB,SAAC,KAAU,CAACU,MAAOnB,QAK/B,C","sources":["redux/news/newsSelectors.js","pages/NewsPage.js"],"sourcesContent":["export const getNews = state => state.news\n","import React, { useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\n\nimport {\n  Title,\n  LoaderPage,\n  NewsSearch,\n  NewsList,\n  NoNewsItem,\n} from 'components';\nimport { Main, NewsContainer } from 'components/News/NewsItem/newsItem.styled';\n\nimport { fetchNews, fetchSearchNews } from 'redux/news/newsOperations';\nimport { getNews } from 'redux/news/newsSelectors';\nimport { sortObjByDate } from 'services/sortObjByDate';\nimport { useTranslation } from 'react-i18next';\n\n\nexport default function NewsPage() {\n\n  const { news, error, isLoading } = useSelector(getNews);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('search')\n  const dispatch = useDispatch();\n  const { t } = useTranslation('common');\n\n  useEffect(() => {\n    if (query === '' || query === null) {\n        dispatch(fetchNews())\n        return\n    }\n    dispatch(fetchSearchNews(query));\n  }, [dispatch, query]);\n  \n  const onFormSubmit = (searchValue) => {\n    if (searchValue?.trim() === \"\" ) {\n      toast.error(\"Please, enter search value!\")\n      return\n    }\n\n    if (searchValue.trim().length < 3|| searchValue.includes('*')) {\n      toast.error(\"Please, enter no less 3 letters for a correct search!\")\n      return\n    }\n    \n    if (searchValue === query) {\n      toast.error(`We have already found \"${query}\"! Please, enter new search value`)\n      return\n    }\n\n    setSearchParams(searchValue !== '' ? { search: searchValue } : {})\n  }\n\n  const sortedNews = sortObjByDate(news, 'date');\n\n  return (\n    <Main>\n      <NewsContainer>\n        <Title text={ t('NewsPage.title')} />\n        <NewsSearch onSubmit={onFormSubmit} value={query} />\n        {error && <p>{error.data}</p>}\n        {isLoading && <LoaderPage />}\n        {news.length !== 0\n          ? <NewsList news={sortedNews}/>\n          : <NoNewsItem value={query}/>}\n      \n      </NewsContainer>\n    </Main>\n  );\n}\n"],"names":["getNews","state","news","NewsPage","useSelector","error","isLoading","useSearchParams","searchParams","setSearchParams","query","get","dispatch","useDispatch","t","useTranslation","useEffect","fetchSearchNews","fetchNews","sortedNews","sortObjByDate","text","onSubmit","searchValue","trim","length","includes","toast","search","value","data"],"sourceRoot":""}