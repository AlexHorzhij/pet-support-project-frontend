{"version":3,"file":"static/js/211.0cadeb8e.chunk.js","mappings":"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","sources":["components/RegisterForm/StepOne.js","components/RegisterForm/StepTwo.js","components/RegisterForm/RegisterForm.js","pages/RegisterPage.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport {\n  StyledInput,\n  ErrorText,\n  FormButton,\n  StyledIconButton,\n} from 'components/RegisterForm/Forms.styled';\nimport { Box } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport { useState } from 'react';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .min(8)\n    .max(63)\n    .matches(\n      /^[^-n]+[a-zA-Z0-9.,!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9]+)*$/,\n      'Email must not contain the \"-\" as a first or last character'\n    )\n    .email()\n    .required(),\n  password: yup\n    .string()\n    .min(7)\n    .max(32)\n    .matches(\n      /^[a-zA-Z0-9]*$/,\n      'Password must contain only latin letters and/or numbers'\n    )\n    .required(),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\n    .min(7)\n    .max(32)\n    .required(),\n});\n\nconst StepOne = ({ next, data }) => {\n  const { t } = useTranslation('common');\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfPassword, setShowConfPassword] = useState(false);\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleClickShowConfPassword = () => setShowConfPassword(show => !show);\n  const handleMouseDownConfPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleSubmit = values => {\n    next(values);\n  };\n\n  return (\n    <Formik\n      initialValues={data}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <Box sx={{ position: 'relative' }}>\n          <StyledInput\n            type=\"email\"\n            name=\"email\"\n            placeholder={t('Registration.form.1linePlaceholder')}\n            disableunderline=\"true\"\n          />\n          <ErrorMessage component=\"div\" name=\"email\">\n            {msg => <ErrorText>*{msg}</ErrorText>}\n          </ErrorMessage>\n        </Box>\n        <Box sx={{ position: 'relative' }}>\n          <StyledInput\n            type={showPassword ? 'text' : 'password'}\n            name=\"password\"\n            placeholder={t('Registration.form.2linePlaceholder')}\n            disableunderline=\"true\"\n          />\n          <StyledIconButton\n            aria-label=\"toggle password visibility\"\n            onClick={handleClickShowPassword}\n            onMouseDown={handleMouseDownPassword}\n            edge=\"end\"\n          >\n            {showPassword ? <VisibilityOff /> : <Visibility />}\n          </StyledIconButton>\n          <ErrorMessage component=\"div\" name=\"password\">\n            {msg => <ErrorText>*{msg}</ErrorText>}\n          </ErrorMessage>\n        </Box>\n        <Box sx={{ position: 'relative' }}>\n          <StyledInput\n            type={showConfPassword ? 'text' : 'password'}\n            name=\"confirmPassword\"\n            placeholder={t('Registration.form.3linePassPlaceholder')}\n            disableunderline=\"true\"\n          />\n          <StyledIconButton\n            aria-label=\"toggle confirmPassword visibility\"\n            onClick={handleClickShowConfPassword}\n            onMouseDown={handleMouseDownConfPassword}\n            edge=\"end\"\n          >\n            {showConfPassword ? <VisibilityOff /> : <Visibility />}\n          </StyledIconButton>\n          <ErrorMessage component=\"div\" name=\"confirmPassword\">\n            {msg => <ErrorText>*{msg}</ErrorText>}\n          </ErrorMessage>\n        </Box>\n        <FormButton variant=\"contained\" type=\"submit\">\n          {t('Registration.form.btn')}\n        </FormButton>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default StepOne;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { getAuth } from 'redux/auth/authSelectors';\nimport { LoaderWhite } from 'components';\nimport {\n  StyledInput,\n  ErrorText,\n  FormButton,\n} from 'components/RegisterForm/Forms.styled';\nimport { Box } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  city: yup\n    .string()\n    .matches(/^[A-Za-z,\\s\\u0400-\\u04FF]*$/, 'String must contain only letters')\n    .required(),\n  phone: yup\n    .string()\n    .min(13)\n    .max(13)\n    .matches(\n      /^[+][3][8][0]+[0-9]*$/,\n      'Phone must contain only numbers and start with \"+380\"'\n    )\n    .required(),\n});\n\nconst StepTwo = ({ next, prev, data }) => {\n  const { t } = useTranslation('common');\n  const handleSubmit = (values, { resetForm }) => {\n    next(values, true);\n    resetForm();\n  };\n  const { isLoading } = useSelector(getAuth);\n\n  return (\n    <Formik\n      initialValues={data}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      {({ values }) => {\n        return (\n          <Form>\n            <Box sx={{ position: 'relative' }}>\n              <StyledInput\n                type=\"text\"\n                name=\"name\"\n                placeholder={t('Registration.form.4linePlaceholder')}\n                disableunderline=\"true\"\n              />\n              <ErrorMessage component=\"div\" name=\"name\">\n                {msg => <ErrorText>*{msg}</ErrorText>}\n              </ErrorMessage>\n            </Box>\n            <Box sx={{ position: 'relative' }}>\n              <StyledInput\n                type=\"text\"\n                name=\"city\"\n                placeholder={t('Registration.form.5linePlaceholder')}\n                disableunderline=\"true\"\n              />\n              <ErrorMessage component=\"div\" name=\"city\">\n                {msg => <ErrorText>*{msg}</ErrorText>}\n              </ErrorMessage>\n            </Box>\n            <Box sx={{ position: 'relative' }}>\n              <StyledInput\n                type=\"tel\"\n                name=\"phone\"\n                placeholder={t('Registration.form.6linePlaceholder')}\n                disableunderline=\"true\"\n              />\n              <ErrorMessage component=\"div\" name=\"phone\">\n                {msg => <ErrorText>*{msg}</ErrorText>}\n              </ErrorMessage>\n            </Box>\n            <FormButton variant=\"contained\" type=\"submit\">\n              {!isLoading ? t('Registration.form.finalBtn') : <LoaderWhite />}\n            </FormButton>\n            <FormButton\n              variant=\"outlined\"\n              type=\"button\"\n              onClick={() => prev(values)}\n            >\n              {t('Registration.form.backBtn')}\n            </FormButton>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default StepTwo;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { registerUser } from 'redux/auth/authOperations';\nimport StepOne from './StepOne';\nimport StepTwo from './StepTwo';\n\nconst RegisterForm = () => {\n  const [data, setData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    name: '',\n    city: '',\n    phone: '',\n  });\n  const [currentStep, setCurrentStep] = useState(0);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleNextStep = (newData, final = false) => {\n    setData(prev => ({ ...prev, ...newData }));\n\n    if (final) {\n      dispatch(\n        registerUser({\n          email: newData.email,\n          password: newData.password,\n          name: newData.name,\n          city: newData.city,\n          phone: newData.phone,\n        })\n      );\n\n      navigate('/verification');\n\n      return;\n    }\n\n    setCurrentStep(prev => prev + 1);\n  };\n\n  const handlePrevStep = newData => {\n    setData(prev => ({ ...prev, ...newData }));\n    setCurrentStep(prev => prev - 1);\n  };\n\n  const steps = [\n    <StepOne next={handleNextStep} data={data} />,\n    <StepTwo next={handleNextStep} prev={handlePrevStep} data={data} />,\n  ];\n\n  return <>{steps[currentStep]}</>;\n};\n\nexport default RegisterForm;\n","import React from 'react';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\nimport { Link } from 'react-router-dom';\nimport {\n  AuthContainer,\n  ContentWrapper,\n  HeaderText,\n  Switcher,\n} from 'pages/LoginPage/LoginPage.styled';\nimport { useTranslation } from 'react-i18next';\n\nfunction RegisterPage() {\n  const {t} = useTranslation('common')\n  return (\n    <AuthContainer>\n      <ContentWrapper>\n        <HeaderText> {t('Registration.title')} </HeaderText>\n        <RegisterForm />\n        <Switcher>\n          {t('Registration.footer.msg')} <Link to=\"/login\">{ t('Registration.footer.link')}</Link>\n        </Switcher>\n      </ContentWrapper>\n    </AuthContainer>\n  );\n}\n\nexport default RegisterPage;\n"],"names":["schema","yup","shape","email","min","max","matches","required","password","confirmPassword","oneOf","next","data","t","useTranslation","useState","showPassword","setShowPassword","showConfPassword","setShowConfPassword","initialValues","validationSchema","onSubmit","values","Box","sx","position","type","name","placeholder","disableunderline","component","msg","onClick","show","onMouseDown","event","preventDefault","edge","VisibilityOff","Visibility","variant","city","phone","prev","isLoading","useSelector","getAuth","resetForm","setData","currentStep","setCurrentStep","dispatch","useDispatch","navigate","useNavigate","handleNextStep","newData","final","registerUser","steps","to"],"sourceRoot":""}